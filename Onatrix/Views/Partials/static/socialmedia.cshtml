@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage;
@inject Umbraco.Cms.Web.Common.UmbracoHelper UmbracoHelper
@{
    var rootContents = UmbracoHelper.ContentAtRoot();
    var settings = rootContents?.FirstOrDefault(x=> x.ContentType.Alias == "settingsPage") ?? null;
    var socialMediaPlatform = settings?.Value<IEnumerable<Umbraco.Cms.Core.Models.Blocks.BlockListItem>>("socialMediaPlatform") ?? null;
    
} 

@if (socialMediaPlatform != null) {

<div class="social-links">
    @foreach (var social in socialMediaPlatform) {
        var platformName = social?.Content.Value<string>("platformName");
        var platformAccountLink = social?.Content.Value<string>("platformAccountLink") ?? "#";
        switch (platformName.ToLower()) {
            case "facebook" :
                <a  href="@platformAccountLink"><i class="fab fa-facebook-f"></i></a>
                break;
            case "x":
                <a href="@platformAccountLink"><i class="fab fa-twitter"></i></a>
                 break;
            case "linkedin":
                <a href="@platformAccountLink"><i class="fab fa-linkedin-in"></i></a>
                 break;
            case "instagram":
                <a href="@platformAccountLink"><i class="fab fa-instagram"></i></a>
                break;
            case "youtube":
                <a href="@platformAccountLink"><i class="fab fa-youtube"></i></a>
                break;
            case "tiktok":
                <a href="@platformAccountLink"><i class="fab fa-tiktok"></i></a>
                break;
        }    
    }
    
    
    
</div>
}


